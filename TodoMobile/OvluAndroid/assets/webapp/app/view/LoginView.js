/*
 * File: app/view/LoginView.js
 *
 * This file was generated by Sencha Architect version 3.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Ovlu.view.LoginView', {
    extend: 'Ext.Panel',
    alias: 'widget.loginView',
    
    requires: ['Ext.form.FieldSet', 'Ext.form.Password', 'Ext.Label', 'Ext.Img'],
    
    config: {
        title: 'Ovlu Login',
        layout: 'vbox',
        pack: 'center',
        align: 'center',
        cls: 'loginBackGround',
            
        items: [ 
            {
                flex: 1,
                xtype: 'panel',
                items: [
                    {
                        xtype: 'image',
                        src: 'resources/images/logo_trn.png',
                        style: 'width:100%;height:50%;margin:auto;'
                                //style: Ext.Viewport.getOrientation() == 'portrait' ? 
                                //'width:80px;height:80px;margin:auto' : 'width:40px;height:40px;margin:auto'
                    },
                    {
                        xtype: 'label',
                        html: 'Ovlu Helps You Find Clients Build a Business',
                        hidden: false,
                        style: 'color:white;text-align:center'                
                    },
                    {
                        xtype: 'label',
                        html: 'Login failed. Please enter the correct credentials.',
                        itemId: 'signInFailedLabel',
                        hidden: true,
                        hideAnimation: 'fadeOut',
                        showAnimation: 'fadeIn',
                        cls: 'loginError'
                    },
                ]
            },
            {
                flex: 2,
                xtype: 'panel',
                items: [
                    {
                        xtype: 'textfield',
                        placeHolder: 'Username',
                        itemId: 'userNameTextField',
                        name: 'userNameTextField',
                        cls: 'loginField',
                        required: true
                    },
                    {
                        xtype: 'passwordfield',
                        placeHolder: 'Password',
                        itemId: 'passwordTextField',
                        name: 'passwordTextField',
                        cls: 'loginField',
                        required: true
                    },
                    {
                        xtype: 'button',
                        itemId: 'logInButton',
                        ui: 'action',
                        padding: '5px',
                        cls: 'loginFieldButton',
                        text: 'Log In'
                    }
                    
                ]
            },
            /*{
                flex: 1,
                xtype: 'panel',
                items: [
                    {
                        xtype: 'image',
                        src: 'resources/images/1.png'
                    },
                    {
                        xtype: 'image',
                        src: 'resources/images/2.png'
                    },
                    {
                        xtype: 'image',
                        src: 'resources/images/5.png'
                    },
                ],

            }*/
  
        ],
        listeners: [{
                delegate: '#logInButton',
                event: 'tap',
                fn: 'onLogInButtonTap'
            }],
    },
    onLogInButtonTap: function() {
        //alert("onLogInButtonTap called");	
        var me = this;

        var usernameField = me.down('#userNameTextField'),
                passwordField = me.down('#passwordTextField'),
                label = me.down('#signInFailedLabel');

        label.hide();

        var username = usernameField.getValue(),
                password = passwordField.getValue();

        // Using a delayed task in order to give the hide animation above
        // time to finish before executing the next steps.
        var task = Ext.create('Ext.util.DelayedTask', function() {

            label.setHtml('');

            me.fireEvent('signInCommand', me, username, password);

            usernameField.setValue('');
            passwordField.setValue('');
        });

        task.delay(50);
    },
    showSignInFailedMessage: function(message) {
        var me = this;
        var errorLabel = me.down('#signInFailedLabel');
        errorLabel.setHtml(message);
        errorLabel.show();
    }
});
